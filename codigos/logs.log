2023-12-07 10:01:54,336:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 10:01:54,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 10:01:54,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 10:01:54,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 10:02:03,421:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pydantic\_internal\_fields.py:127: UserWarning: Field "model_server_url" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(

2023-12-07 10:02:03,471:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pydantic\_internal\_config.py:269: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)

2023-12-07 11:14:26,800:INFO:PyCaret ClassificationExperiment
2023-12-07 11:14:26,800:INFO:Logging name: clf-default-name
2023-12-07 11:14:26,800:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-07 11:14:26,800:INFO:version 3.1.0
2023-12-07 11:14:26,800:INFO:Initializing setup()
2023-12-07 11:14:26,800:INFO:self.USI: 87d9
2023-12-07 11:14:26,801:INFO:self._variable_keys: {'seed', 'y', 'logging_param', 'n_jobs_param', 'data', 'USI', 'fold_shuffle_param', 'is_multiclass', 'y_train', 'target_param', 'log_plots_param', 'y_test', 'fix_imbalance', 'gpu_n_jobs_param', 'X', 'fold_generator', 'X_train', '_available_plots', 'exp_name_log', 'exp_id', 'X_test', 'fold_groups_param', '_ml_usecase', 'idx', 'pipeline', 'gpu_param', 'memory', 'html_param'}
2023-12-07 11:14:26,801:INFO:Checking environment
2023-12-07 11:14:26,801:INFO:python_version: 3.9.18
2023-12-07 11:14:26,801:INFO:python_build: ('main', 'Sep 11 2023 14:09:26')
2023-12-07 11:14:26,801:INFO:machine: AMD64
2023-12-07 11:14:26,801:INFO:platform: Windows-10-10.0.22000-SP0
2023-12-07 11:14:26,806:INFO:Memory: svmem(total=17044291584, available=3832532992, percent=77.5, used=13211758592, free=3832532992)
2023-12-07 11:14:26,806:INFO:Physical Core: 4
2023-12-07 11:14:26,806:INFO:Logical Core: 8
2023-12-07 11:14:26,806:INFO:Checking libraries
2023-12-07 11:14:26,806:INFO:System:
2023-12-07 11:14:26,806:INFO:    python: 3.9.18 (main, Sep 11 2023, 14:09:26) [MSC v.1916 64 bit (AMD64)]
2023-12-07 11:14:26,806:INFO:executable: c:\Users\germanm\.conda\envs\evertecenv\python.exe
2023-12-07 11:14:26,806:INFO:   machine: Windows-10-10.0.22000-SP0
2023-12-07 11:14:26,807:INFO:PyCaret required dependencies:
2023-12-07 11:14:26,926:INFO:                 pip: 23.3
2023-12-07 11:14:26,926:INFO:          setuptools: 68.0.0
2023-12-07 11:14:26,926:INFO:             pycaret: 3.1.0
2023-12-07 11:14:26,926:INFO:             IPython: 8.17.2
2023-12-07 11:14:26,926:INFO:          ipywidgets: 8.1.1
2023-12-07 11:14:26,926:INFO:                tqdm: 4.66.1
2023-12-07 11:14:26,926:INFO:               numpy: 1.23.5
2023-12-07 11:14:26,927:INFO:              pandas: 1.5.3
2023-12-07 11:14:26,927:INFO:              jinja2: 3.1.2
2023-12-07 11:14:26,927:INFO:               scipy: 1.10.1
2023-12-07 11:14:26,927:INFO:              joblib: 1.3.2
2023-12-07 11:14:26,927:INFO:             sklearn: 1.2.2
2023-12-07 11:14:26,927:INFO:                pyod: 1.1.1
2023-12-07 11:14:26,927:INFO:            imblearn: 0.11.0
2023-12-07 11:14:26,927:INFO:   category_encoders: 2.6.3
2023-12-07 11:14:26,927:INFO:            lightgbm: 4.1.0
2023-12-07 11:14:26,927:INFO:               numba: 0.58.1
2023-12-07 11:14:26,927:INFO:            requests: 2.31.0
2023-12-07 11:14:26,927:INFO:          matplotlib: 3.7.3
2023-12-07 11:14:26,927:INFO:          scikitplot: 0.3.7
2023-12-07 11:14:26,927:INFO:         yellowbrick: 1.5
2023-12-07 11:14:26,927:INFO:              plotly: 5.18.0
2023-12-07 11:14:26,927:INFO:    plotly-resampler: Not installed
2023-12-07 11:14:26,927:INFO:             kaleido: 0.2.1
2023-12-07 11:14:26,927:INFO:           schemdraw: 0.15
2023-12-07 11:14:26,927:INFO:         statsmodels: 0.14.0
2023-12-07 11:14:26,927:INFO:              sktime: 0.21.1
2023-12-07 11:14:26,927:INFO:               tbats: 1.1.3
2023-12-07 11:14:26,927:INFO:            pmdarima: 2.0.4
2023-12-07 11:14:26,927:INFO:              psutil: 5.9.6
2023-12-07 11:14:26,928:INFO:          markupsafe: 2.1.3
2023-12-07 11:14:26,928:INFO:             pickle5: Not installed
2023-12-07 11:14:26,928:INFO:         cloudpickle: 2.2.1
2023-12-07 11:14:26,928:INFO:         deprecation: 2.1.0
2023-12-07 11:14:26,928:INFO:              xxhash: 3.4.1
2023-12-07 11:14:26,928:INFO:           wurlitzer: Not installed
2023-12-07 11:14:26,928:INFO:PyCaret optional dependencies:
2023-12-07 11:14:26,945:INFO:                shap: Not installed
2023-12-07 11:14:26,945:INFO:           interpret: Not installed
2023-12-07 11:14:26,945:INFO:                umap: Not installed
2023-12-07 11:14:26,945:INFO:     ydata_profiling: 4.6.1
2023-12-07 11:14:26,945:INFO:  explainerdashboard: Not installed
2023-12-07 11:14:26,945:INFO:             autoviz: Not installed
2023-12-07 11:14:26,945:INFO:           fairlearn: Not installed
2023-12-07 11:14:26,945:INFO:          deepchecks: Not installed
2023-12-07 11:14:26,945:INFO:             xgboost: Not installed
2023-12-07 11:14:26,945:INFO:            catboost: 1.2.2
2023-12-07 11:14:26,945:INFO:              kmodes: Not installed
2023-12-07 11:14:26,945:INFO:             mlxtend: Not installed
2023-12-07 11:14:26,945:INFO:       statsforecast: Not installed
2023-12-07 11:14:26,945:INFO:        tune_sklearn: Not installed
2023-12-07 11:14:26,945:INFO:                 ray: Not installed
2023-12-07 11:14:26,945:INFO:            hyperopt: Not installed
2023-12-07 11:14:26,945:INFO:              optuna: 3.4.0
2023-12-07 11:14:26,945:INFO:               skopt: Not installed
2023-12-07 11:14:26,946:INFO:              mlflow: 2.8.0
2023-12-07 11:14:26,946:INFO:              gradio: Not installed
2023-12-07 11:14:26,946:INFO:             fastapi: Not installed
2023-12-07 11:14:26,946:INFO:             uvicorn: Not installed
2023-12-07 11:14:26,946:INFO:              m2cgen: Not installed
2023-12-07 11:14:26,946:INFO:           evidently: Not installed
2023-12-07 11:14:26,946:INFO:               fugue: Not installed
2023-12-07 11:14:26,946:INFO:           streamlit: Not installed
2023-12-07 11:14:26,946:INFO:             prophet: Not installed
2023-12-07 11:14:26,946:INFO:None
2023-12-07 11:14:26,946:INFO:Set up data.
2023-12-07 11:14:27,008:INFO:Set up folding strategy.
2023-12-07 11:14:27,008:INFO:Set up train/test split.
2023-12-07 11:14:27,023:INFO:Set up index.
2023-12-07 11:14:27,025:INFO:Assigning column types.
2023-12-07 11:14:27,031:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-07 11:14:27,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-07 11:14:27,095:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-07 11:14:27,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:27,136:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:27,360:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-07 11:14:27,361:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-07 11:14:27,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:27,391:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:27,391:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-07 11:14:27,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-07 11:14:27,467:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:27,467:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:27,512:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-07 11:14:27,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:27,540:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:27,540:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-07 11:14:27,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:27,616:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:27,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:27,691:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:27,707:INFO:Preparing preprocessing pipeline...
2023-12-07 11:14:27,710:INFO:Set up label encoding.
2023-12-07 11:14:27,710:INFO:Set up simple imputation.
2023-12-07 11:14:27,711:INFO:Set up column name cleaning.
2023-12-07 11:14:27,843:INFO:Finished creating preprocessing pipeline.
2023-12-07 11:14:27,853:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\germanm\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['DIAS_EN_EMERGER',
                                             'DIAS_EN_EMERGER_A_FLORECER',
                                             'DIAS_EN_FLORECER_A_COSECHAR',
                                             'POBLACION_20DIAS_AJT...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-07 11:14:27,853:INFO:Creating final display dataframe.
2023-12-07 11:14:28,016:INFO:Setup _display_container:                     Description             Value
0                    Session id              3266
1                        Target             Grupo
2                   Target type        Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2
4           Original data shape        (799, 175)
5        Transformed data shape        (799, 175)
6   Transformed train set shape        (559, 175)
7    Transformed test set shape        (240, 175)
8              Numeric features               174
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13               Fold Generator   StratifiedKFold
14                  Fold Number                10
15                     CPU Jobs                -1
16                      Use GPU             False
17               Log Experiment             False
18              Experiment Name  clf-default-name
19                          USI              87d9
2023-12-07 11:14:28,123:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:28,123:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:28,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-12-07 11:14:28,202:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-07 11:14:28,202:INFO:setup() successfully completed in 1.41s...............
2023-12-07 11:15:54,039:INFO:Initializing compare_models()
2023-12-07 11:15:54,039:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-07 11:15:54,039:INFO:Checking exceptions
2023-12-07 11:15:54,047:INFO:Preparing display monitor
2023-12-07 11:15:54,091:INFO:Initializing Logistic Regression
2023-12-07 11:15:54,092:INFO:Total runtime is 0.0 minutes
2023-12-07 11:15:54,100:INFO:SubProcess create_model() called ==================================
2023-12-07 11:15:54,100:INFO:Initializing create_model()
2023-12-07 11:15:54,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:15:54,101:INFO:Checking exceptions
2023-12-07 11:15:54,101:INFO:Importing libraries
2023-12-07 11:15:54,101:INFO:Copying training dataset
2023-12-07 11:15:54,109:INFO:Defining folds
2023-12-07 11:15:54,109:INFO:Declaring metric variables
2023-12-07 11:15:54,116:INFO:Importing untrained model
2023-12-07 11:15:54,121:INFO:Logistic Regression Imported successfully
2023-12-07 11:15:54,131:INFO:Starting cross validation
2023-12-07 11:15:54,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:06,719:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:06,723:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:06,739:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:06,857:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:06,860:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:06,863:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:06,866:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:06,868:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:06,870:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:06,871:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:06,873:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:06,874:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:06,877:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:06,881:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:06,883:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:06,885:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:07,116:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:07,155:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,157:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,160:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,161:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,164:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,167:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:07,179:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:07,225:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,228:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,230:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,232:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,235:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,237:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:07,254:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:07,292:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,293:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,296:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,298:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,300:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,303:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:07,399:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:07,450:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,454:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,456:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,458:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:07,460:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:07,462:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:07,465:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:07,516:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:08,428:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:08,451:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:08,453:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:08,455:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:08,456:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:08,458:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:08,460:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:08,499:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-12-07 11:16:08,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:08,532:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:08,535:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:08,536:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:08,538:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:08,540:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:08,546:INFO:Calculating mean and std
2023-12-07 11:16:08,548:INFO:Creating metrics dataframe
2023-12-07 11:16:08,554:INFO:Uploading results into container
2023-12-07 11:16:08,555:INFO:Uploading model into container now
2023-12-07 11:16:08,556:INFO:_master_model_container: 1
2023-12-07 11:16:08,556:INFO:_display_container: 2
2023-12-07 11:16:08,557:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3266, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-07 11:16:08,557:INFO:create_model() successfully completed......................................
2023-12-07 11:16:08,666:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:08,666:INFO:Creating metrics dataframe
2023-12-07 11:16:08,681:INFO:Initializing K Neighbors Classifier
2023-12-07 11:16:08,682:INFO:Total runtime is 0.243180247147878 minutes
2023-12-07 11:16:08,688:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:08,689:INFO:Initializing create_model()
2023-12-07 11:16:08,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:08,689:INFO:Checking exceptions
2023-12-07 11:16:08,689:INFO:Importing libraries
2023-12-07 11:16:08,689:INFO:Copying training dataset
2023-12-07 11:16:08,696:INFO:Defining folds
2023-12-07 11:16:08,696:INFO:Declaring metric variables
2023-12-07 11:16:08,703:INFO:Importing untrained model
2023-12-07 11:16:08,713:INFO:K Neighbors Classifier Imported successfully
2023-12-07 11:16:08,730:INFO:Starting cross validation
2023-12-07 11:16:08,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:09,128:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,129:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,132:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,133:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,136:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,138:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,142:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,144:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,146:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,148:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,152:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,153:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,158:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,160:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,162:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,164:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,168:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,169:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,202:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,203:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,205:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,206:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,207:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,207:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,208:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,209:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,209:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,210:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,211:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,211:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,213:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,213:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,215:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,218:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,219:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,230:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,231:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,233:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,234:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,236:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,237:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,243:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,243:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,244:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,245:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,247:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,248:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,251:INFO:Calculating mean and std
2023-12-07 11:16:09,252:INFO:Creating metrics dataframe
2023-12-07 11:16:09,257:INFO:Uploading results into container
2023-12-07 11:16:09,258:INFO:Uploading model into container now
2023-12-07 11:16:09,259:INFO:_master_model_container: 2
2023-12-07 11:16:09,259:INFO:_display_container: 2
2023-12-07 11:16:09,259:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-07 11:16:09,259:INFO:create_model() successfully completed......................................
2023-12-07 11:16:09,356:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:09,356:INFO:Creating metrics dataframe
2023-12-07 11:16:09,371:INFO:Initializing Naive Bayes
2023-12-07 11:16:09,371:INFO:Total runtime is 0.2546597639719645 minutes
2023-12-07 11:16:09,375:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:09,375:INFO:Initializing create_model()
2023-12-07 11:16:09,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:09,377:INFO:Checking exceptions
2023-12-07 11:16:09,377:INFO:Importing libraries
2023-12-07 11:16:09,377:INFO:Copying training dataset
2023-12-07 11:16:09,383:INFO:Defining folds
2023-12-07 11:16:09,383:INFO:Declaring metric variables
2023-12-07 11:16:09,390:INFO:Importing untrained model
2023-12-07 11:16:09,396:INFO:Naive Bayes Imported successfully
2023-12-07 11:16:09,409:INFO:Starting cross validation
2023-12-07 11:16:09,412:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:09,520:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,522:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,524:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,524:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,526:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,526:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,528:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,528:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,532:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,534:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,539:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,540:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,543:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,544:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,545:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,547:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,547:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,549:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,551:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,553:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,556:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,558:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,567:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,569:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,571:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,574:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,579:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,586:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,607:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,608:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,609:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,611:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,611:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,612:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,612:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,613:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,613:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,614:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,618:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,619:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,648:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,649:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,652:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,653:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:09,655:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:09,657:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:09,666:INFO:Calculating mean and std
2023-12-07 11:16:09,668:INFO:Creating metrics dataframe
2023-12-07 11:16:09,673:INFO:Uploading results into container
2023-12-07 11:16:09,674:INFO:Uploading model into container now
2023-12-07 11:16:09,675:INFO:_master_model_container: 3
2023-12-07 11:16:09,675:INFO:_display_container: 2
2023-12-07 11:16:09,676:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-07 11:16:09,676:INFO:create_model() successfully completed......................................
2023-12-07 11:16:09,778:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:09,779:INFO:Creating metrics dataframe
2023-12-07 11:16:09,794:INFO:Initializing Decision Tree Classifier
2023-12-07 11:16:09,794:INFO:Total runtime is 0.26171971956888834 minutes
2023-12-07 11:16:09,800:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:09,801:INFO:Initializing create_model()
2023-12-07 11:16:09,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:09,801:INFO:Checking exceptions
2023-12-07 11:16:09,801:INFO:Importing libraries
2023-12-07 11:16:09,801:INFO:Copying training dataset
2023-12-07 11:16:09,809:INFO:Defining folds
2023-12-07 11:16:09,809:INFO:Declaring metric variables
2023-12-07 11:16:09,815:INFO:Importing untrained model
2023-12-07 11:16:09,822:INFO:Decision Tree Classifier Imported successfully
2023-12-07 11:16:09,832:INFO:Starting cross validation
2023-12-07 11:16:09,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:10,014:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,017:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,019:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,020:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,021:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,023:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,023:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,025:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,025:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,025:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,026:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,027:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,029:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,029:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,030:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,031:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,031:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,034:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,035:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,036:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,037:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,039:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,042:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,043:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,046:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,047:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,048:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,051:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,051:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,053:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,053:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,055:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,055:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,056:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,057:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,110:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,111:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,113:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,113:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,115:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,116:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,117:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,117:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,118:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,120:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,128:INFO:Calculating mean and std
2023-12-07 11:16:10,129:INFO:Creating metrics dataframe
2023-12-07 11:16:10,136:INFO:Uploading results into container
2023-12-07 11:16:10,137:INFO:Uploading model into container now
2023-12-07 11:16:10,137:INFO:_master_model_container: 4
2023-12-07 11:16:10,137:INFO:_display_container: 2
2023-12-07 11:16:10,138:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3266, splitter='best')
2023-12-07 11:16:10,138:INFO:create_model() successfully completed......................................
2023-12-07 11:16:10,235:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:10,235:INFO:Creating metrics dataframe
2023-12-07 11:16:10,254:INFO:Initializing SVM - Linear Kernel
2023-12-07 11:16:10,254:INFO:Total runtime is 0.26938182512919107 minutes
2023-12-07 11:16:10,259:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:10,260:INFO:Initializing create_model()
2023-12-07 11:16:10,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:10,260:INFO:Checking exceptions
2023-12-07 11:16:10,260:INFO:Importing libraries
2023-12-07 11:16:10,260:INFO:Copying training dataset
2023-12-07 11:16:10,269:INFO:Defining folds
2023-12-07 11:16:10,269:INFO:Declaring metric variables
2023-12-07 11:16:10,275:INFO:Importing untrained model
2023-12-07 11:16:10,282:INFO:SVM - Linear Kernel Imported successfully
2023-12-07 11:16:10,296:INFO:Starting cross validation
2023-12-07 11:16:10,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:10,526:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-07 11:16:10,526:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-07 11:16:10,527:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-07 11:16:10,527:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-07 11:16:10,528:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,528:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,528:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,529:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,529:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,531:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,531:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,532:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,533:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,533:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,533:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,534:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,534:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,535:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,535:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,535:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,536:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,536:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,536:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,537:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,537:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,538:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,538:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-07 11:16:10,538:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,538:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,539:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,540:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,542:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,545:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,546:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,549:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,551:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,626:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-07 11:16:10,626:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-07 11:16:10,628:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,628:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,629:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,629:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,632:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,633:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,633:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:10,634:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,635:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:10,635:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,636:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:10,640:INFO:Calculating mean and std
2023-12-07 11:16:10,642:INFO:Creating metrics dataframe
2023-12-07 11:16:10,647:INFO:Uploading results into container
2023-12-07 11:16:10,648:INFO:Uploading model into container now
2023-12-07 11:16:10,649:INFO:_master_model_container: 5
2023-12-07 11:16:10,649:INFO:_display_container: 2
2023-12-07 11:16:10,650:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3266, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-07 11:16:10,650:INFO:create_model() successfully completed......................................
2023-12-07 11:16:10,769:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:10,769:INFO:Creating metrics dataframe
2023-12-07 11:16:10,802:INFO:Initializing Ridge Classifier
2023-12-07 11:16:10,802:INFO:Total runtime is 0.2785208622614542 minutes
2023-12-07 11:16:10,815:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:10,817:INFO:Initializing create_model()
2023-12-07 11:16:10,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:10,817:INFO:Checking exceptions
2023-12-07 11:16:10,818:INFO:Importing libraries
2023-12-07 11:16:10,818:INFO:Copying training dataset
2023-12-07 11:16:10,848:INFO:Defining folds
2023-12-07 11:16:10,849:INFO:Declaring metric variables
2023-12-07 11:16:10,863:INFO:Importing untrained model
2023-12-07 11:16:10,876:INFO:Ridge Classifier Imported successfully
2023-12-07 11:16:10,898:INFO:Starting cross validation
2023-12-07 11:16:10,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:11,036:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,036:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,037:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,038:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,038:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,039:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,039:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,039:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,040:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,040:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,040:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,041:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,041:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,042:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,043:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,043:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,043:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,044:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,047:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,047:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,047:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,048:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, msg_start, len(result))

2023-12-07 11:16:11,049:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:11,049:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:11,050:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:11,051:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,051:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,052:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:11,054:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,055:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,056:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,059:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,061:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,064:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,065:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,066:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:11,109:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,110:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-07 11:16:11,110:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,114:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,114:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,117:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,117:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,118:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,119:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:11,120:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:11,121:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:11,124:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:11,138:INFO:Calculating mean and std
2023-12-07 11:16:11,140:INFO:Creating metrics dataframe
2023-12-07 11:16:11,145:INFO:Uploading results into container
2023-12-07 11:16:11,146:INFO:Uploading model into container now
2023-12-07 11:16:11,147:INFO:_master_model_container: 6
2023-12-07 11:16:11,148:INFO:_display_container: 2
2023-12-07 11:16:11,148:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3266, solver='auto',
                tol=0.0001)
2023-12-07 11:16:11,149:INFO:create_model() successfully completed......................................
2023-12-07 11:16:11,273:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:11,274:INFO:Creating metrics dataframe
2023-12-07 11:16:11,306:INFO:Initializing Random Forest Classifier
2023-12-07 11:16:11,306:INFO:Total runtime is 0.2869082649548848 minutes
2023-12-07 11:16:11,313:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:11,314:INFO:Initializing create_model()
2023-12-07 11:16:11,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:11,314:INFO:Checking exceptions
2023-12-07 11:16:11,315:INFO:Importing libraries
2023-12-07 11:16:11,316:INFO:Copying training dataset
2023-12-07 11:16:11,329:INFO:Defining folds
2023-12-07 11:16:11,329:INFO:Declaring metric variables
2023-12-07 11:16:11,338:INFO:Importing untrained model
2023-12-07 11:16:11,350:INFO:Random Forest Classifier Imported successfully
2023-12-07 11:16:11,371:INFO:Starting cross validation
2023-12-07 11:16:11,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:12,153:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,154:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,157:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,158:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,160:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,162:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,189:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,215:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,217:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,219:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,221:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,223:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,225:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,229:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,231:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,234:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,235:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,238:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,239:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,274:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,275:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,277:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,279:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,282:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,284:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,337:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,339:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,341:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,343:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,345:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,348:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,386:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,387:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,389:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,390:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,393:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,395:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,708:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,709:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,710:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,711:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,714:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,716:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,726:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,727:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,729:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,732:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:12,733:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:12,735:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:12,748:INFO:Calculating mean and std
2023-12-07 11:16:12,750:INFO:Creating metrics dataframe
2023-12-07 11:16:12,755:INFO:Uploading results into container
2023-12-07 11:16:12,756:INFO:Uploading model into container now
2023-12-07 11:16:12,758:INFO:_master_model_container: 7
2023-12-07 11:16:12,758:INFO:_display_container: 2
2023-12-07 11:16:12,758:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3266, verbose=0, warm_start=False)
2023-12-07 11:16:12,759:INFO:create_model() successfully completed......................................
2023-12-07 11:16:12,861:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:12,861:INFO:Creating metrics dataframe
2023-12-07 11:16:12,879:INFO:Initializing Quadratic Discriminant Analysis
2023-12-07 11:16:12,880:INFO:Total runtime is 0.3131471435228983 minutes
2023-12-07 11:16:12,885:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:12,885:INFO:Initializing create_model()
2023-12-07 11:16:12,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:12,886:INFO:Checking exceptions
2023-12-07 11:16:12,886:INFO:Importing libraries
2023-12-07 11:16:12,886:INFO:Copying training dataset
2023-12-07 11:16:12,893:INFO:Defining folds
2023-12-07 11:16:12,893:INFO:Declaring metric variables
2023-12-07 11:16:12,899:INFO:Importing untrained model
2023-12-07 11:16:12,906:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-07 11:16:12,920:INFO:Starting cross validation
2023-12-07 11:16:12,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:13,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,047:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,051:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,051:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,053:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,103:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,103:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,104:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 msg_start, len(result))

2023-12-07 11:16:13,105:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,107:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,107:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,108:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,109:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,110:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,113:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,114:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,114:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,116:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,124:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,127:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,128:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,131:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,132:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,133:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,134:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,135:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,136:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,136:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,138:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,139:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,141:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,133:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,142:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,143:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,147:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,149:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,152:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,156:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,168:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,169:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-07 11:16:13,211:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,212:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,216:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,218:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,218:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,219:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,219:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,221:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,221:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,222:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,223:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,225:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,241:INFO:Calculating mean and std
2023-12-07 11:16:13,243:INFO:Creating metrics dataframe
2023-12-07 11:16:13,249:INFO:Uploading results into container
2023-12-07 11:16:13,250:INFO:Uploading model into container now
2023-12-07 11:16:13,251:INFO:_master_model_container: 8
2023-12-07 11:16:13,251:INFO:_display_container: 2
2023-12-07 11:16:13,252:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-07 11:16:13,252:INFO:create_model() successfully completed......................................
2023-12-07 11:16:13,355:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:13,355:INFO:Creating metrics dataframe
2023-12-07 11:16:13,374:INFO:Initializing Ada Boost Classifier
2023-12-07 11:16:13,374:INFO:Total runtime is 0.3213883519172668 minutes
2023-12-07 11:16:13,382:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:13,382:INFO:Initializing create_model()
2023-12-07 11:16:13,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:13,382:INFO:Checking exceptions
2023-12-07 11:16:13,383:INFO:Importing libraries
2023-12-07 11:16:13,383:INFO:Copying training dataset
2023-12-07 11:16:13,392:INFO:Defining folds
2023-12-07 11:16:13,392:INFO:Declaring metric variables
2023-12-07 11:16:13,399:INFO:Importing untrained model
2023-12-07 11:16:13,405:INFO:Ada Boost Classifier Imported successfully
2023-12-07 11:16:13,419:INFO:Starting cross validation
2023-12-07 11:16:13,422:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:13,942:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,944:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,946:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,948:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,950:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,951:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:13,953:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,955:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:13,957:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:13,993:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,030:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,032:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:14,122:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,123:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,125:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,126:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,129:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,131:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:14,158:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,159:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,180:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,184:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,186:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,198:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,199:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:14,200:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,202:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,204:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,207:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,208:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:14,226:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,229:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,231:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,233:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,235:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,237:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:14,407:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,408:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,410:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,411:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,413:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,414:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:14,426:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,427:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,430:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,431:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:14,432:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:14,433:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:14,437:INFO:Calculating mean and std
2023-12-07 11:16:14,439:INFO:Creating metrics dataframe
2023-12-07 11:16:14,444:INFO:Uploading results into container
2023-12-07 11:16:14,445:INFO:Uploading model into container now
2023-12-07 11:16:14,447:INFO:_master_model_container: 9
2023-12-07 11:16:14,447:INFO:_display_container: 2
2023-12-07 11:16:14,448:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3266)
2023-12-07 11:16:14,448:INFO:create_model() successfully completed......................................
2023-12-07 11:16:14,605:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:14,606:INFO:Creating metrics dataframe
2023-12-07 11:16:14,681:INFO:Initializing Gradient Boosting Classifier
2023-12-07 11:16:14,681:INFO:Total runtime is 0.3431573947270711 minutes
2023-12-07 11:16:14,690:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:14,691:INFO:Initializing create_model()
2023-12-07 11:16:14,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:14,693:INFO:Checking exceptions
2023-12-07 11:16:14,693:INFO:Importing libraries
2023-12-07 11:16:14,693:INFO:Copying training dataset
2023-12-07 11:16:14,709:INFO:Defining folds
2023-12-07 11:16:14,710:INFO:Declaring metric variables
2023-12-07 11:16:14,722:INFO:Importing untrained model
2023-12-07 11:16:14,732:INFO:Gradient Boosting Classifier Imported successfully
2023-12-07 11:16:14,749:INFO:Starting cross validation
2023-12-07 11:16:14,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:18,678:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:18,680:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:18,682:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:18,683:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:18,684:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:18,685:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:18,687:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:18,687:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:18,689:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:18,690:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:18,694:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:18,696:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:19,448:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:19,450:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:19,452:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:19,454:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:19,457:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:19,459:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:19,833:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:19,835:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:19,837:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:19,839:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:19,842:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:19,843:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:20,015:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:20,017:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:20,019:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:20,021:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:20,025:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:20,027:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:20,086:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:20,088:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:20,091:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:20,094:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:20,096:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:20,098:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:21,929:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:21,931:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:21,933:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:21,934:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:21,935:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:21,938:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:21,980:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:21,981:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:21,983:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:21,984:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:21,986:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:21,988:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,001:INFO:Calculating mean and std
2023-12-07 11:16:22,003:INFO:Creating metrics dataframe
2023-12-07 11:16:22,008:INFO:Uploading results into container
2023-12-07 11:16:22,009:INFO:Uploading model into container now
2023-12-07 11:16:22,010:INFO:_master_model_container: 10
2023-12-07 11:16:22,010:INFO:_display_container: 2
2023-12-07 11:16:22,011:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3266, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-07 11:16:22,011:INFO:create_model() successfully completed......................................
2023-12-07 11:16:22,118:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:22,118:INFO:Creating metrics dataframe
2023-12-07 11:16:22,141:INFO:Initializing Linear Discriminant Analysis
2023-12-07 11:16:22,141:INFO:Total runtime is 0.46749912103017166 minutes
2023-12-07 11:16:22,148:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:22,148:INFO:Initializing create_model()
2023-12-07 11:16:22,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:22,149:INFO:Checking exceptions
2023-12-07 11:16:22,149:INFO:Importing libraries
2023-12-07 11:16:22,149:INFO:Copying training dataset
2023-12-07 11:16:22,160:INFO:Defining folds
2023-12-07 11:16:22,160:INFO:Declaring metric variables
2023-12-07 11:16:22,166:INFO:Importing untrained model
2023-12-07 11:16:22,172:INFO:Linear Discriminant Analysis Imported successfully
2023-12-07 11:16:22,188:INFO:Starting cross validation
2023-12-07 11:16:22,192:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:22,348:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,350:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,352:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,352:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,354:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,355:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,356:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,357:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,358:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,359:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,360:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,361:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,361:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,362:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,362:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,363:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,365:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,366:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,367:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,368:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,368:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,368:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,372:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,372:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,373:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,375:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,376:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,376:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,378:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,380:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,380:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,381:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,384:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,385:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,389:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,390:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,442:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,444:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,445:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,446:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,447:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,448:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,450:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,451:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,453:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,455:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:22,457:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:22,458:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:22,464:INFO:Calculating mean and std
2023-12-07 11:16:22,465:INFO:Creating metrics dataframe
2023-12-07 11:16:22,471:INFO:Uploading results into container
2023-12-07 11:16:22,472:INFO:Uploading model into container now
2023-12-07 11:16:22,473:INFO:_master_model_container: 11
2023-12-07 11:16:22,473:INFO:_display_container: 2
2023-12-07 11:16:22,473:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-07 11:16:22,474:INFO:create_model() successfully completed......................................
2023-12-07 11:16:22,584:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:22,585:INFO:Creating metrics dataframe
2023-12-07 11:16:22,635:INFO:Initializing Extra Trees Classifier
2023-12-07 11:16:22,635:INFO:Total runtime is 0.4757292707761128 minutes
2023-12-07 11:16:22,647:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:22,648:INFO:Initializing create_model()
2023-12-07 11:16:22,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:22,648:INFO:Checking exceptions
2023-12-07 11:16:22,649:INFO:Importing libraries
2023-12-07 11:16:22,649:INFO:Copying training dataset
2023-12-07 11:16:22,662:INFO:Defining folds
2023-12-07 11:16:22,662:INFO:Declaring metric variables
2023-12-07 11:16:22,669:INFO:Importing untrained model
2023-12-07 11:16:22,676:INFO:Extra Trees Classifier Imported successfully
2023-12-07 11:16:22,693:INFO:Starting cross validation
2023-12-07 11:16:22,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:23,435:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,437:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,440:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,442:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,444:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,446:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:23,466:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,468:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,472:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,474:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,482:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,491:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:23,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,530:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,532:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,532:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,535:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,536:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,538:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,541:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,543:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:23,544:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,547:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:23,641:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,643:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,645:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,647:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,649:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,651:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:23,671:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,673:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,675:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,677:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,679:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,681:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:23,982:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,984:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,986:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,988:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:23,991:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:23,993:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:24,015:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:24,017:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:24,021:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:24,023:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:24,025:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:24,027:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:24,037:INFO:Calculating mean and std
2023-12-07 11:16:24,040:INFO:Creating metrics dataframe
2023-12-07 11:16:24,048:INFO:Uploading results into container
2023-12-07 11:16:24,049:INFO:Uploading model into container now
2023-12-07 11:16:24,050:INFO:_master_model_container: 12
2023-12-07 11:16:24,050:INFO:_display_container: 2
2023-12-07 11:16:24,051:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3266, verbose=0, warm_start=False)
2023-12-07 11:16:24,051:INFO:create_model() successfully completed......................................
2023-12-07 11:16:24,331:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:24,332:INFO:Creating metrics dataframe
2023-12-07 11:16:24,356:INFO:Initializing Light Gradient Boosting Machine
2023-12-07 11:16:24,356:INFO:Total runtime is 0.5044216036796569 minutes
2023-12-07 11:16:24,362:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:24,363:INFO:Initializing create_model()
2023-12-07 11:16:24,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:24,363:INFO:Checking exceptions
2023-12-07 11:16:24,363:INFO:Importing libraries
2023-12-07 11:16:24,364:INFO:Copying training dataset
2023-12-07 11:16:24,374:INFO:Defining folds
2023-12-07 11:16:24,374:INFO:Declaring metric variables
2023-12-07 11:16:24,382:INFO:Importing untrained model
2023-12-07 11:16:24,390:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-07 11:16:24,400:INFO:Starting cross validation
2023-12-07 11:16:24,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:16:26,689:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:26,724:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:26,726:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:26,729:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:26,730:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:26,733:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:26,736:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:26,763:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:26,765:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:26,768:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:26,770:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:26,773:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:26,775:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:27,073:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,075:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,077:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,079:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,081:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,083:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:27,158:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,160:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,162:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,166:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,168:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,171:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:27,185:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,188:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,190:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,191:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,192:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,193:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,194:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,195:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,196:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,197:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:27,198:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,201:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:27,748:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,750:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,753:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,754:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,757:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,758:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:27,811:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,813:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,815:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,816:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:16:27,819:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:16:27,820:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:16:27,832:INFO:Calculating mean and std
2023-12-07 11:16:27,835:INFO:Creating metrics dataframe
2023-12-07 11:16:27,842:INFO:Uploading results into container
2023-12-07 11:16:27,843:INFO:Uploading model into container now
2023-12-07 11:16:27,844:INFO:_master_model_container: 13
2023-12-07 11:16:27,844:INFO:_display_container: 2
2023-12-07 11:16:27,845:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3266, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-07 11:16:27,846:INFO:create_model() successfully completed......................................
2023-12-07 11:16:27,960:INFO:SubProcess create_model() end ==================================
2023-12-07 11:16:27,960:INFO:Creating metrics dataframe
2023-12-07 11:16:27,980:INFO:Initializing CatBoost Classifier
2023-12-07 11:16:27,980:INFO:Total runtime is 0.5648137132326762 minutes
2023-12-07 11:16:27,988:INFO:SubProcess create_model() called ==================================
2023-12-07 11:16:27,989:INFO:Initializing create_model()
2023-12-07 11:16:27,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:16:27,989:INFO:Checking exceptions
2023-12-07 11:16:27,989:INFO:Importing libraries
2023-12-07 11:16:27,990:INFO:Copying training dataset
2023-12-07 11:16:27,996:INFO:Defining folds
2023-12-07 11:16:27,996:INFO:Declaring metric variables
2023-12-07 11:16:28,003:INFO:Importing untrained model
2023-12-07 11:16:28,008:INFO:CatBoost Classifier Imported successfully
2023-12-07 11:16:28,021:INFO:Starting cross validation
2023-12-07 11:16:28,024:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:17:24,068:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:24,077:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:24,078:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:24,078:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:24,085:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:24,087:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:17:25,034:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,037:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,037:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,042:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,045:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:17:25,593:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,595:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,595:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,595:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,595:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,605:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:17:25,918:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,920:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,923:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,926:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,928:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,931:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:17:25,952:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,955:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,956:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,959:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:17:25,963:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:17:25,966:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:17:25,975:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
5 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
5 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\pipeline.py", line 267, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\catboost\core.py", line 5100, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, sample_weight, None, None, None, None, baseline, use_best_model,
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\catboost\core.py", line 2319, in _fit
    self._train(
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\catboost\core.py", line 1723, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 4645, in _catboost._CatBoost._train
  File "_catboost.pyx", line 4694, in _catboost._CatBoost._train
_catboost.CatBoostError: C:/Go_Agent/pipelines/BuildMaster/catboost.git/catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-12-07 11:17:25,976:INFO:Calculating mean and std
2023-12-07 11:17:25,979:INFO:Creating metrics dataframe
2023-12-07 11:17:25,988:INFO:Uploading results into container
2023-12-07 11:17:25,989:INFO:Uploading model into container now
2023-12-07 11:17:25,990:INFO:_master_model_container: 14
2023-12-07 11:17:25,990:INFO:_display_container: 2
2023-12-07 11:17:25,991:INFO:<catboost.core.CatBoostClassifier object at 0x0000021385AFA490>
2023-12-07 11:17:25,992:INFO:create_model() successfully completed......................................
2023-12-07 11:17:26,139:WARNING:create_model() for <catboost.core.CatBoostClassifier object at 0x0000021385AFA490> raised an exception or returned all 0.0, trying without fit_kwargs:
2023-12-07 11:17:26,180:WARNING:Traceback (most recent call last):
  File "c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 798, in compare_models
    assert (
AssertionError

2023-12-07 11:17:26,180:INFO:Initializing create_model()
2023-12-07 11:17:26,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:17:26,180:INFO:Checking exceptions
2023-12-07 11:17:26,181:INFO:Importing libraries
2023-12-07 11:17:26,181:INFO:Copying training dataset
2023-12-07 11:17:26,189:INFO:Defining folds
2023-12-07 11:17:26,189:INFO:Declaring metric variables
2023-12-07 11:17:26,196:INFO:Importing untrained model
2023-12-07 11:17:26,202:INFO:CatBoost Classifier Imported successfully
2023-12-07 11:17:26,216:INFO:Starting cross validation
2023-12-07 11:17:26,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:18:50,386:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:50,392:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:18:50,425:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:50,427:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:18:50,429:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:50,432:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:18:55,638:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:55,664:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:18:55,664:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:55,664:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:18:55,674:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:55,678:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:18:59,250:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:59,251:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:18:59,253:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:59,253:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:18:59,258:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:18:59,260:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:00,528:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:00,528:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:00,533:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:00,533:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:00,538:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:00,580:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:01,245:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:01,247:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:01,251:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:01,254:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:01,257:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:01,260:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:02,736:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:02,743:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:02,745:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:02,749:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:02,752:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:02,753:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:19,450:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:19,453:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:19,455:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:19,455:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:19,455:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:19,455:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:22,687:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:22,688:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:22,690:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:22,691:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:22,692:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:22,694:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:22,715:INFO:Calculating mean and std
2023-12-07 11:19:22,717:INFO:Creating metrics dataframe
2023-12-07 11:19:22,725:INFO:Uploading results into container
2023-12-07 11:19:22,727:INFO:Uploading model into container now
2023-12-07 11:19:22,728:INFO:_master_model_container: 15
2023-12-07 11:19:22,728:INFO:_display_container: 2
2023-12-07 11:19:22,728:INFO:<catboost.core.CatBoostClassifier object at 0x00000213856DB250>
2023-12-07 11:19:22,728:INFO:create_model() successfully completed......................................
2023-12-07 11:19:22,842:INFO:SubProcess create_model() end ==================================
2023-12-07 11:19:22,843:INFO:Creating metrics dataframe
2023-12-07 11:19:22,871:INFO:Initializing Dummy Classifier
2023-12-07 11:19:22,871:INFO:Total runtime is 3.479661997159322 minutes
2023-12-07 11:19:22,877:INFO:SubProcess create_model() called ==================================
2023-12-07 11:19:22,878:INFO:Initializing create_model()
2023-12-07 11:19:22,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000213802E64C0>, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:19:22,878:INFO:Checking exceptions
2023-12-07 11:19:22,878:INFO:Importing libraries
2023-12-07 11:19:22,878:INFO:Copying training dataset
2023-12-07 11:19:22,886:INFO:Defining folds
2023-12-07 11:19:22,886:INFO:Declaring metric variables
2023-12-07 11:19:22,893:INFO:Importing untrained model
2023-12-07 11:19:22,900:INFO:Dummy Classifier Imported successfully
2023-12-07 11:19:22,911:INFO:Starting cross validation
2023-12-07 11:19:22,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-07 11:19:23,009:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,013:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,015:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,018:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,020:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,022:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,039:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,041:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,049:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,052:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,054:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,057:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,062:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,072:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,074:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,075:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,076:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,079:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,081:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,083:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,086:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,095:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,101:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,109:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,112:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,113:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,113:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,115:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,116:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,117:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,118:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,118:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,120:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,121:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,122:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,122:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,122:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,123:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,123:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,124:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,125:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,125:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,127:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,128:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,129:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-07 11:19:23,130:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,131:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-07 11:19:23,133:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,133:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\sklearn\metrics\_classification.py:1609: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, "true nor predicted", "F-score is", len(true_sum))

2023-12-07 11:19:23,147:INFO:Calculating mean and std
2023-12-07 11:19:23,154:INFO:Creating metrics dataframe
2023-12-07 11:19:23,165:INFO:Uploading results into container
2023-12-07 11:19:23,167:INFO:Uploading model into container now
2023-12-07 11:19:23,168:INFO:_master_model_container: 16
2023-12-07 11:19:23,168:INFO:_display_container: 2
2023-12-07 11:19:23,169:INFO:DummyClassifier(constant=None, random_state=3266, strategy='prior')
2023-12-07 11:19:23,169:INFO:create_model() successfully completed......................................
2023-12-07 11:19:23,298:INFO:SubProcess create_model() end ==================================
2023-12-07 11:19:23,298:INFO:Creating metrics dataframe
2023-12-07 11:19:23,335:INFO:Initializing create_model()
2023-12-07 11:19:23,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000213802E6BB0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3266, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-12-07 11:19:23,335:INFO:Checking exceptions
2023-12-07 11:19:23,338:INFO:Importing libraries
2023-12-07 11:19:23,338:INFO:Copying training dataset
2023-12-07 11:19:23,350:INFO:Defining folds
2023-12-07 11:19:23,351:INFO:Declaring metric variables
2023-12-07 11:19:23,351:INFO:Importing untrained model
2023-12-07 11:19:23,351:INFO:Declaring custom model
2023-12-07 11:19:23,352:INFO:Extra Trees Classifier Imported successfully
2023-12-07 11:19:23,355:INFO:Cross validation set to False
2023-12-07 11:19:23,356:INFO:Fitting Model
2023-12-07 11:19:23,645:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3266, verbose=0, warm_start=False)
2023-12-07 11:19:23,645:INFO:create_model() successfully completed......................................
2023-12-07 11:19:23,815:INFO:_master_model_container: 16
2023-12-07 11:19:23,815:INFO:_display_container: 2
2023-12-07 11:19:23,816:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3266, verbose=0, warm_start=False)
2023-12-07 11:19:23,816:INFO:compare_models() successfully completed......................................
2023-12-12 08:20:09,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 08:20:09,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 08:20:09,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 08:20:09,492:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-12 08:20:14,622:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pydantic\_internal\_fields.py:127: UserWarning: Field "model_server_url" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(

2023-12-12 08:20:14,656:WARNING:c:\Users\germanm\.conda\envs\evertecenv\lib\site-packages\pydantic\_internal\_config.py:269: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)

